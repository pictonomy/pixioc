/* * Copyright the original author or authors. *  * Licensed under the MOZILLA PUBLIC LICENSE, Version 1.1 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at *  *      http://www.mozilla.org/MPL/MPL-1.1.html *  * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ package net.pixlib.ioc.parser {	import net.pixlib.ioc.parser.factory.PXAbstractParserCollection;	import net.pixlib.ioc.parser.factory.xml.PXDLLParser;	import net.pixlib.ioc.parser.factory.xml.PXDisplayObjectParser;	import net.pixlib.ioc.parser.factory.xml.PXImportParser;	import net.pixlib.ioc.parser.factory.xml.PXLibParser;	import net.pixlib.ioc.parser.factory.xml.PXLoaderParser;	import net.pixlib.ioc.parser.factory.xml.PXObjectParser;	import net.pixlib.ioc.parser.factory.xml.PXPathParser;	import net.pixlib.ioc.parser.factory.xml.PXPreprocessorParser;	import net.pixlib.ioc.parser.factory.xml.PXResourceParser;	import net.pixlib.ioc.parser.factory.xml.PXVarParser;	/**	 * IoC parsers collection for XML context format.	 * 	 * @author Romain Ecarnot	 */		public class PXXMLCollection extends PXAbstractParserCollection	{		//--------------------------------------------------------------------		// Public API		//--------------------------------------------------------------------				/**		 * Creates instance.		 */		public function PXXMLCollection(  )		{			super( );		}						//--------------------------------------------------------------------		// Protected methods		//--------------------------------------------------------------------				/**		 * @inheritDoc		 */		override protected function setParserList(  ) : void		{			oCollection.push( new PXVarParser( ) );			oCollection.push( new PXPathParser( ) );			oCollection.push( new PXLibParser( ) );			oCollection.push( new PXLoaderParser( ) );			oCollection.push( new PXImportParser( ) );			oCollection.push( new PXPathParser( ) );						oCollection.push( new PXPreprocessorParser( ) );			oCollection.push( getASPreProcessor( ) );						oCollection.push( new PXDLLParser( ) );			oCollection.push( new PXResourceParser( ) );			oCollection.push( new PXDisplayObjectParser( ) );			oCollection.push( new PXObjectParser( ) );		}	}}				